function objectIsValid(...obj){
	return obj.every(e => e != undefined && e != null);
}

const original_proto = {
    open: XMLHttpRequest.prototype.open,
    setRequestHeader: XMLHttpRequest.prototype.setRequestHeader
};

XMLHttpRequest.prototype.open = function(method, url){
    original_proto.open.apply(this, arguments);
	
	this.target_url = url;
    if(url.search('/events/poll') != -1){
		this.is_poll_event = true;
        console.log(url);
    }
}

XMLHttpRequest.prototype.setRequestHeader = function(a, b){
    original_proto.setRequestHeader.apply(this, arguments);
    
    if(objectIsValid(this.target_url, this.is_poll_event, a, b) && a == 'Authentication' && b.startsWith('skypetoken=')){
        XMLHttpRequest.prototype.setRequestHeader = original_proto.setRequestHeader;
        XMLHttpRequest.prototype.open = original_proto.open;
		
		console.log(JSON.stringify({
			'skype-token': b.split('=')[1],
			'poll-event': this.target_url
		}));
    }
}
